@layout LoginLayout
@page "/login"

@using System.Text
@inject NavigationManager NavigationManager


<div class="login-container">
    <div class="login-card">
        <img src="/imagen/logo.png" alt="Logo" class="logo" />
        <div class="avatar">
        </div>
        <h2>Welcome back!</h2>

        <form @onsubmit="HandleSubmit">
            <label for="userId" class="form-label">Email</label>R
            <TelerikTextBox Id="userId" Placeholder="Email" @bind-Value="@pcUser" Class="form-input" />

            <label for="password" class="form-label">Password</label>
            <TelerikTextBox Id="password" Placeholder="Password" Password="true" @bind-Value="@pcClave" Class="form-input" />
            @if (errorLogin != "")
            {
                <div class="alert alert-danger">@errorLogin</div>
            }
            @if (!string.IsNullOrEmpty(errorLogin))
            {
                <div class="alert alert-danger">@errorLogin</div>
            }


            <TelerikButton Id="commandSubmit" Icon="@SvgIcon.Login"  Class="btn-login">
                Log in
            </TelerikButton>
        </form>


    </div>
</div>

<style>
    .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: url('/imagen/fondo.jpg') no-repeat center center fixed;
    background-size: cover;
    }

    .login-card {
    background-color: white;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    text-align: center;
    width: 350px;
    }

    .logo {
    width: 100px;
    margin-bottom: 20px;
    }

    .avatar img {
    width: 60px height: 60px;
    border-radius: 50%;
    margin-bottom: 20px;
    }

    h2 {
    font-family: Arial, sans-serif;
    font-size: 1.5rem;
    margin-bottom: 20px;
    color: #333;
    }

    .form-label {
    display: block;
    text-align: left;
    margin-bottom: 5px;
    font-weight: bold;
    color: #555;
    }

    .form-input {
    width: 100%;
    margin-bottom: 20px;
    }

    .btn-login {
    width: 100%;
    background-color: #5f1319;
    color: white;
    padding: 10px;
    font-size: 1rem;
    border-radius: #7f0010;
    text-transform: uppercase;
    font-weight: bold;
    transition: background-color 0.3s;
    }

    .btn-login:hover {
    background-color: #5f1319;
    }

    .options {
    margin-top: 15px;
    }

    .forgot-password,
    .register-link {
    color: #ff6b6b;
    text-decoration: none;
    font-size: 0.9rem;
    }

    .forgot-password:hover,
    .register-link:hover {
    text-decoration: underline;
    }
</style>
@* 
<AuthorizeView>

    <Authorized>
        <h1>Autorizado</h1>
    </Authorized>

    <NotAuthorized>
        <h1>No Autorizado</h1>

    </NotAuthorized>

</AuthorizeView>
 *@

@code {
    private string pcUser { get; set; }
    private string pcClave { get; set; }
    private string errorLogin { get; set; } = "";

    private async Task HandleSubmit()
    {
        await ValidarUsuario2();
    }


    private async Task ValidarUsuario2()
    {
        var endUrl = "http://192.168.10.46:8810/WebServices/rest/IntegraERP/Seguridad/Login";

        using var client = new HttpClient();

    /*    var request = new HttpRequestMessage(HttpMethod.Post, baseUrl);
            request.Headers.Add("pcuser", pcUser);
            request.Headers.Add("pcClave", pcClave);
            request.Headers.Add("User-Agent", "PostmanRuntime/7.43.0");
            request.Headers.Add("Accept", "application/json");
            request.Headers.Add("Content-Lenght", "0");
            request.Headers.Add("Accept-Encoding", "gzip, deflate, br");
            request.Headers.Add("Connection", "keep-alive");
           //   var response = await client.SendAsync(request);
            // Crear el contenido del cuerpo (si es necesario)


            client.DefaultRequestHeaders.Add("X-Requested-With", "XMLHttpRequest");
            client.DefaultRequestHeaders.Add("Mode", "no-cors");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            client.DefaultRequestHeaders.Add("Authorization", "Bearer YOUR_TOKEN");

            client.DefaultRequestHeaders.Add("Accept", "application/json");
            client.DefaultRequestHeaders.Add("pcuser", pcUser);*/

        // Console.WriteLine(request);
       // var requestBody = new StringContent("", Encoding.UTF8, "application/json");


        // Agregar encabezados necesarios
    /*    client.DefaultRequestHeaders.Clear();
            client.DefaultRequestHeaders.Add("User-Agent", "PostmanRuntime/7.43.0");
            client.DefaultRequestHeaders.Add("Accept", "application/json");
            client.DefaultRequestHeaders.Add("Content-Lenght", "0");
            client.DefaultRequestHeaders.Add("Accept-Encoding", "gzip, deflate, br");
            client.DefaultRequestHeaders.Add("Connection", "keep-alive");
         */
      //  request.SetBrowserRequestMode(BrowserRequestMode.NoCors);
        var response = await client.PostAsync(endUrl, null);

        Console.WriteLine(response);

       

            // Realizar la solicitud POST
          //  var response = await client.PostAsync(baseUrl, requestBody);
         //   response.addHeader("Access-Control-Allow-Origin", "*");
            Console.WriteLine(response);
          //  var asd = 123;

            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                Console.WriteLine("Respuesta del servidor:");
                Console.WriteLine(content);
                NavigationManager.NavigateTo("/counter");
            }
            else
            {
                Console.WriteLine($"Error: {response.StatusCode}");
                Console.WriteLine(await response.Content.ReadAsStringAsync());
                errorLogin = "Nombre de usuario o clave no son válidas";
            }
        
    }
    private async Task ValidarUsuario()
    {
        var request = new HttpRequestMessage(HttpMethod.Post, "http://192.168.10.46:8810/WebServices/rest/IntegraERP/Seguridad/Login");
        request.Headers.Add("pcUser", pcUser);
        request.Headers.Add("pcClave", pcClave);

        
        // Configurar el modo no-cors
        var client = new HttpClient();
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Add("Accept", "application/json");
        client.DefaultRequestHeaders.Add("Mode", "no-cors");

        try
        {
            var response = await client.SendAsync(request);
            if (response.IsSuccessStatusCode)
            {
                // Aquí no podrás leer el contenido
                NavigationManager.NavigateTo("/counter");
            }
            else
            {
                errorLogin = "Nombre de usuario o clave no son válidas.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

    }

}
