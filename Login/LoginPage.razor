
@layout LoginLayout
@page "/"
@using Newtonsoft.Json.Linq;


@using System.Text
@inject NavigationManager NavigationManager


<div class="login-container">
    <div class="login-card">
        <img src="/imagen/logo.png" alt="Logo" class="logo" />
        <div class="avatar">
        </div>
        <h2>Bienvenido</h2>

        <form @onsubmit="HandleSubmit">
            <label for="userId" class="form-label">Email</label>
            <TelerikTextBox Id="userId" Placeholder="Email" @bind-Value="@pcUser" Class="form-input" />

            <label for="password" class="form-label">Password</label>
            <TelerikTextBox Id="password" Placeholder="Password" Password="true" @bind-Value="@pcClave" Class="form-input" />
            @if (errorLogin != "")
            {
                <div class="alert alert-danger">@errorLogin</div>
            }
            <TelerikButton Id="commandSubmit" Icon="@SvgIcon.Login"  Class="btn-login">
                Log in
            </TelerikButton>
        </form>


    </div>
</div>

<style>
    .login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: url('/imagen/fondo2.jpg') no-repeat center center fixed;
        background-size: cover;
        }

        .login-card {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        text-align: center;
        width: 350px;
        }

        .logo {
        width: 100px;
        margin-bottom: 20px;
        }

        .avatar img {
        width: 60px height: 60px;
        border-radius: 50%;
        margin-bottom: 20px;
        }

        h2 {
        font-family: Arial, sans-serif;
        font-size: 1.5rem;
        margin-bottom: 20px;
        color: #333;
        }

        .form-label {
        display: block;
        text-align: left;
        margin-bottom: 5px;
        font-weight: bold;
        color: #555;
        }

        .form-input {
        width: 100%;
        margin-bottom: 20px;
        }

        .btn-login {
        width: 100%;
        background-color: #5f1319;
        color: white;
        padding: 10px;
        font-size: 1rem;
        border-radius: #7f0010;
        text-transform: uppercase;
        font-weight: bold;
        transition: background-color 0.3s;
        }

        .btn-login:hover {
        background-color: #5f1319;
        }

        .options {
        margin-top: 15px;
        }

        .forgot-password,
        .register-link {
        color: #ff6b6b;
        text-decoration: none;
        font-size: 0.9rem;
        }

        .forgot-password:hover,
        .register-link:hover {
        text-decoration: underline;
        }
</style>
@* 
<AuthorizeView>

    <Authorized>
        <h1>Autorizado</h1>
    </Authorized>

    <NotAuthorized>
        <h1>No Autorizado</h1>

    </NotAuthorized>

</AuthorizeView>
 *@

@code {
    private string pcUser { get; set; }
    private string pcClave { get; set; }
    private string errorLogin { get; set; } = "";

    private async Task HandleSubmit()
    {
        await ValidarUsuario2(pcUser,pcClave);
    }


    private async Task ValidarUsuario2(string pcUser, string pcClave)
    {
        var endUrl = $"http://localhost:8810/WebServices/rest/IntegraERP/Seguridad/Login?pcUser={pcUser}&pcClave={pcClave}";

        using var client = new HttpClient();


        var response = await client.PostAsync(endUrl, null);

        Console.WriteLine(response);

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();

            var rootObject = JObject.Parse(content);

            string estado = rootObject["dsIntegra"]?["ttEstados"]?[0]?["estado"]?.ToString();

            if (estado == "Contraseña Incorrecta" || estado == "Usuario Incorrecto" || estado == "La Empresa no Existe" || estado == "EXPIRADO")
            {
                if (estado == "EXPIRADO"){
                    errorLogin = "Su estado es: " + estado + ". Debe cambiar su clave";
                }
                else { errorLogin = estado; }
                

            }
            else {
                NavigationManager.NavigateTo("/gridoe1");
            }
        }
        else
        {
            Console.WriteLine($"Error: {response.StatusCode}");
            errorLogin = "Nombre de usuario o clave no son válidas";
        }

    }

}